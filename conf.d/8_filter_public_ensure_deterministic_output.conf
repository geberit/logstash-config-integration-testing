filter {
  mutate {
    update => {
      "#logstash_timestamp" => "2023-05-23T23:23:23.555Z"

      "#random" => 42
    }

    remove_field => [
      "mac_oui"
    ]
  }
  ruby {
    init => "require 'socket'"

    ## This also updates [#logstash_host].
    code => "
      begin

        def set_deterministic_hostname(event, k, v, logstash_fqdn)
          logstash_hostname = logstash_fqdn.gsub(/\..*/, '')
          if v.is_a?(String) and v == logstash_fqdn or v == logstash_hostname
            event.set(k, 'gnu.example.com')
          end
        end

        logstash_fqdn = Socket.gethostname
        event.to_hash.each do |k,v|
          set_deterministic_hostname(event, k, v, logstash_fqdn)
        end

        rescue Exception => e
          event.set('tags', '_rubyefailure: ' + e.message)
      end
      "
  }
  if [#logstash_timestamp] {
    date {
      match => [ "#logstash_timestamp", "ISO8601"]
      target => "#logstash_timestamp"
    }
  } else {
    ## If [#logstash_timestamp] is not present we assume @timestamp is set to
    ## the current time by Logstash.
    mutate {
      replace => {
        "@timestamp_new" => "2023-05-23T23:23:23.555Z"
      }
    }
    date {
      match => [ "@timestamp_new", "ISO8601"]
      remove_field => [ "@timestamp_new" ]
    }
  }
}
