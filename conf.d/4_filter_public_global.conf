filter {
  ## Ensure that the [#source] field only has one element by removing a
  ## possibly existing second element with index 1.
  mutate {
    remove_field => [
      "[#source][1]"
    ]
  }

  ## Set [#logstash_timestamp] as early as possible to the timestamp when the
  ## event entered a logstash instance for the first time.
  ## If archived logs are re-digested, [#logstash_timestamp] will not be overwritten.
  if ![#logstash_timestamp] {
    mutate {
      ## Comments are not allowed in ruby hash declaration.

      ## Undefined [@timestamp] is known to be deadly for the logstash!
      ## Using `copy` for this seems to be deadly for the es logstash output.
      ## TODO: Retest.
      # copy => {
      #   "@timestamp" => "#logstash_timestamp"
      # }
      # -> "#logstash_timestamp" => "%{@timestamp}"
      add_field => {
        "#logstash_timestamp" => "%{@timestamp}"
      }
    }
  }

  ## Copy this section as needed and change the if "". Unfortunately, no
  ## `string in list` check condition works here because in the worst case, both objects
  ## are lists (also the `string`):
  ## if "windows-eventlog" in [#source] {
  if [@metadata][#save_raw_event] {
    ## Clone events for later unparsed storage to files.
    clone {
      clones => ["raw_event"]
      add_field => {
        "[@metadata][#skip_ls_filter]" => true
      }
    }
  }

  if ![@metadata][#skip_ls_filter] {
    mutate {
      remove_field => [
        ## Ensure fields added by input plugins is absent.
        "path",
        "input_type",
        "type",
        "source",

        ## Added by *beat at emit time.
        "beat",

        ## The offset could be useful. https://github.com/logstash-plugins/logstash-input-file/issues/7
        "offset"
      ]

      # rename => {
      #   "offset"  => "#logfile_byte_offset"
      # }

    }

    if ![@metadata][pre_filters] {
      mutate {
        remove_field => [
          ## [host] is set when an event enters a Elastic component (Logstash, FileBeat, ...).
          ## So we can not use the field to reliable populate the [#logstash_host] field.
          ## Unless we populated it ourselfs.
          "host"
        ]
      }
    }

    ## [#logstash_host] is optional. It is useful for debugging.
    ## If it is not needed anymore, just comment out the following section.
    ruby {
      init => "require 'socket'"
      code => "event.set('#logstash_host', Socket.gethostname)"
    }

  }
}
